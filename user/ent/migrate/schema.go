// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserLogsColumns holds the columns for the "user_logs" table.
	UserLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "ip", Type: field.TypeString},
		{Name: "remark", Type: field.TypeString},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "user_user_logs", Type: field.TypeInt, Nullable: true},
	}
	// UserLogsTable holds the schema information for the "user_logs" table.
	UserLogsTable = &schema.Table{
		Name:       "user_logs",
		Columns:    UserLogsColumns,
		PrimaryKey: []*schema.Column{UserLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_logs_users_userLogs",
				Columns:    []*schema.Column{UserLogsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserOaInfosColumns holds the columns for the "user_oa_infos" table.
	UserOaInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "email_pwd", Type: field.TypeString},
		{Name: "user_user_oa_info", Type: field.TypeInt, Nullable: true},
	}
	// UserOaInfosTable holds the schema information for the "user_oa_infos" table.
	UserOaInfosTable = &schema.Table{
		Name:       "user_oa_infos",
		Columns:    UserOaInfosColumns,
		PrimaryKey: []*schema.Column{UserOaInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_oa_infos_users_userOaInfo",
				Columns:    []*schema.Column{UserOaInfosColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserOpInfosColumns holds the columns for the "user_op_infos" table.
	UserOpInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "phone", Type: field.TypeString},
		{Name: "user_user_op_info", Type: field.TypeInt, Nullable: true},
	}
	// UserOpInfosTable holds the schema information for the "user_op_infos" table.
	UserOpInfosTable = &schema.Table{
		Name:       "user_op_infos",
		Columns:    UserOpInfosColumns,
		PrimaryKey: []*schema.Column{UserOpInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_op_infos_users_userOpInfo",
				Columns:    []*schema.Column{UserOpInfosColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UsersTable,
		UserLogsTable,
		UserOaInfosTable,
		UserOpInfosTable,
	}
)

func init() {
	UserLogsTable.ForeignKeys[0].RefTable = UsersTable
	UserOaInfosTable.ForeignKeys[0].RefTable = UsersTable
	UserOpInfosTable.ForeignKeys[0].RefTable = UsersTable
}
