// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeUserLogs holds the string denoting the userlogs edge name in mutations.
	EdgeUserLogs = "userLogs"
	// EdgeUserOaInfo holds the string denoting the useroainfo edge name in mutations.
	EdgeUserOaInfo = "userOaInfo"
	// EdgeUserOpInfo holds the string denoting the useropinfo edge name in mutations.
	EdgeUserOpInfo = "userOpInfo"
	// Table holds the table name of the user in the database.
	Table = "users"
	// UserLogsTable is the table the holds the userLogs relation/edge.
	UserLogsTable = "user_logs"
	// UserLogsInverseTable is the table name for the UserLog entity.
	// It exists in this package in order to avoid circular dependency with the "userlog" package.
	UserLogsInverseTable = "user_logs"
	// UserLogsColumn is the table column denoting the userLogs relation/edge.
	UserLogsColumn = "user_user_logs"
	// UserOaInfoTable is the table the holds the userOaInfo relation/edge.
	UserOaInfoTable = "user_oa_infos"
	// UserOaInfoInverseTable is the table name for the UserOaInfo entity.
	// It exists in this package in order to avoid circular dependency with the "useroainfo" package.
	UserOaInfoInverseTable = "user_oa_infos"
	// UserOaInfoColumn is the table column denoting the userOaInfo relation/edge.
	UserOaInfoColumn = "user_user_oa_info"
	// UserOpInfoTable is the table the holds the userOpInfo relation/edge.
	UserOpInfoTable = "user_op_infos"
	// UserOpInfoInverseTable is the table name for the UserOpInfo entity.
	// It exists in this package in order to avoid circular dependency with the "useropinfo" package.
	UserOpInfoInverseTable = "user_op_infos"
	// UserOpInfoColumn is the table column denoting the userOpInfo relation/edge.
	UserOpInfoColumn = "user_user_op_info"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldAge,
	FieldName,
	FieldUsername,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
